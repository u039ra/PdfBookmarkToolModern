<Window x:Class="PdfBookmarkToolModern.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:PdfBookmarkToolModern.Converters"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" 
        Height="600" Width="1000"
        MinHeight="400" MinWidth="800">
    
    <Window.Resources>
        <!-- Converters -->
        <converters:GoToRVisibilityConverter x:Key="GoToRVisibilityConverter"/>
        <converters:NullOrEmptyToVisibilityConverter x:Key="NullOrEmptyToVisibilityConverter"/>
        
        <!-- TreeView用のHierarchicalDataTemplate -->
        <HierarchicalDataTemplate x:Key="BookmarkTemplate" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Title}" 
                          ToolTip="{Binding DisplayText}"
                          FontWeight="{Binding Level, Converter={x:Static converters:LevelToFontWeightConverter.Instance}}"
                          Margin="2"/>
            </StackPanel>
        </HierarchicalDataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- メニューバー -->
        <Menu Grid.Row="0">
            <MenuItem Header="ファイル(_F)">
                <MenuItem Header="PDFを開く(_O)" Command="{Binding LoadPdfCommand}"/>
                <MenuItem Header="ブックマークをチェック(_C)" Command="{Binding CheckBookmarksCommand}"/>
                <Separator/>
                <MenuItem Header="Excelから読み込み(_I)" Command="{Binding LoadFromExcelCommand}"/>
                <MenuItem Header="Excelに保存(_E)" Command="{Binding SaveToExcelCommand}"/>
                <Separator/>
                <MenuItem Header="PDFに書き込み(_W)" Command="{Binding WriteToPdfCommand}"/>
                <MenuItem Header="フォルダ内のPDFに一括書き込み(_B)" Command="{Binding WriteToBatchPdfCommand}"/>
                <Separator/>
                <MenuItem Header="終了(_X)" Click="ExitMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="編集(_E)">
                <MenuItem Header="ブックマークを追加(_A)" Command="{Binding AddBookmarkCommand}"/>
                <MenuItem Header="ブックマークを削除(_D)" Command="{Binding DeleteBookmarkCommand}"/>
                <MenuItem Header="変更を適用(_P)" Command="{Binding ApplyChangesCommand}"/>
            </MenuItem>
        </Menu>

        <!-- メインコンテンツエリア -->
        <Grid Grid.Row="1" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <!-- 左側パネル: ブックマーク階層表示 -->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- ブックマーク操作ボタン -->
                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
                    <Button Content="追加" Command="{Binding AddBookmarkCommand}" ToolTip="新しいブックマークを追加"/>
                    <Button Content="削除" Command="{Binding DeleteBookmarkCommand}" ToolTip="選択したブックマークを削除"/>
                    <Button Content="適用" Command="{Binding ApplyChangesCommand}" ToolTip="変更を適用"/>
                </StackPanel>

                <!-- ブックマーク階層表示TreeView -->
                <TreeView Grid.Row="1" 
                         Name="BookmarkTreeView"
                         ItemsSource="{Binding Bookmarks}"
                         ItemTemplate="{StaticResource BookmarkTemplate}"
                         SelectedItemChanged="BookmarkTreeView_SelectedItemChanged"
                         AllowDrop="True"
                         PreviewMouseLeftButtonDown="TreeView_PreviewMouseLeftButtonDown"
                         MouseMove="TreeView_MouseMove"
                         Drop="TreeView_Drop"
                         DragOver="TreeView_DragOver">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                            <EventSetter Event="PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>

                <!-- 統計情報 -->
                <TextBlock Grid.Row="2" 
                          Text="{Binding Bookmarks.Count, StringFormat='ブックマーク数: {0}'}"
                          Margin="0,5,0,0"
                          HorizontalAlignment="Right"/>
            </Grid>

            <!-- スプリッター -->
            <GridSplitter Grid.Column="1" 
                         Background="LightGray" 
                         HorizontalAlignment="Stretch"/>

            <!-- 右側パネル: ブックマーク詳細編集 -->
            <Grid Grid.Column="2" DataContext="{Binding SelectedBookmark}" Margin="10,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- ヘッダー -->
                <TextBlock Grid.Row="0" 
                          Text="ブックマーク詳細編集" 
                          FontSize="16" 
                          FontWeight="Bold" 
                          Margin="0,0,0,10"/>

                <!-- 詳細編集パネル -->
                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                    <StackPanel IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=DataContext, Converter={StaticResource NullOrEmptyToVisibilityConverter}}">
                        
                        <!-- タイトル -->
                        <Label Content="タイトル:"/>
                        <TextBox Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}" 
                                AcceptsReturn="False"/>

                        <!-- レベル -->
                        <Label Content="レベル:"/>
                        <TextBox Text="{Binding Level, UpdateSourceTrigger=PropertyChanged}"
                                IsReadOnly="True"
                                Background="LightGray"/>

                        <!-- アクションタイプ -->
                        <Label Content="アクションタイプ:"/>
                        <ComboBox SelectedItem="{Binding ActionType, UpdateSourceTrigger=PropertyChanged}"
                                 ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ActionTypes}"/>

                        <!-- リンク先ファイル (GoToRの場合のみ表示) -->
                        <Label Content="リンク先ファイル:"
                              Visibility="{Binding ActionType, Converter={StaticResource GoToRVisibilityConverter}}"/>
                        <TextBox Text="{Binding LinkFile, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{Binding ActionType, Converter={StaticResource GoToRVisibilityConverter}}"/>

                        <!-- ページ番号 -->
                        <Label Content="ページ番号:"/>
                        <TextBox Text="{Binding LinkPage, UpdateSourceTrigger=PropertyChanged}"/>

                        <!-- 表示オプション -->
                        <Label Content="表示オプション:"/>
                        <ComboBox SelectedItem="{Binding DisplayOption, UpdateSourceTrigger=PropertyChanged}"
                                 ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.DisplayOptions}"/>

                        <!-- X座標 (XYZの場合のみ表示) -->
                        <Label Content="X座標:"
                              Visibility="{Binding DisplayOption, Converter={StaticResource ActionTypeToVisibilityConverter}, ConverterParameter=XYZ}"/>
                        <TextBox Text="{Binding XCoord, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{Binding DisplayOption, Converter={StaticResource ActionTypeToVisibilityConverter}, ConverterParameter=XYZ}"/>

                        <!-- Y座標 (XYZの場合のみ表示) -->
                        <Label Content="Y座標:"
                              Visibility="{Binding DisplayOption, Converter={StaticResource ActionTypeToVisibilityConverter}, ConverterParameter=XYZ}"/>
                        <TextBox Text="{Binding YCoord, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{Binding DisplayOption, Converter={StaticResource ActionTypeToVisibilityConverter}, ConverterParameter=XYZ}"/>

                        <!-- プレビュー -->
                        <Label Content="プレビュー:" Margin="0,10,0,0"/>
                        <Border BorderBrush="LightGray" BorderThickness="1" Padding="5" Background="LightYellow">
                            <TextBlock Text="{Binding DisplayText}" 
                                      TextWrapping="Wrap"
                                      MaxHeight="100"
                                      VerticalAlignment="Top"/>
                        </Border>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Grid>

        <!-- ステータスバー -->
        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <ProgressBar Width="100" Height="16" 
                                IsIndeterminate="{Binding IsProcessing}"
                                Visibility="{Binding IsProcessing, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}}"/>
                    <TextBlock Text="処理中..." 
                              Margin="5,0,0,0"
                              Visibility="{Binding IsProcessing, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}}"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window> 